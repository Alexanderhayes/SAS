*****************************************************************************************************
* PROGRAM: sugi24.sas
* PROGRAMMER: A. Young
* STUDY: SUGI-24
* INITIATION DATE: August 18, 1998
* DESCRIPTION: SAS CODE TO DEMOSTRATE USING SAS MACRO TO INCLUDE
* STATISTICS OUTPUT IN CLINICAL SUMMARY TABLE.
*****************************************************************************************************;
options center ps=58 errorabend mrecall mautosource mprint noovp
sasautos=(’!SASROOT/sasautos’,’/users/analysis/acy/MACRO’);
/* USER-DEFINED MACRO VARIABLES */
%LET GVAR = GRPCODE ; * GROUP VARIABLE;
%LET INDATA = sugi24 ; * SAS DATA FOR MACRO PROGRAM -- REQUIRED;
%LET VARNUM = 5 ; * TOTAL NUMBER OF VARIABLES TO USE -- REQURIED;
/* ASSIGN OUTPUT FILE LOCATION & FILE NAME */
FILENAME OUTFILE "/users/analysis/acy/sugi/sugi24.tab";
/* ASSIGN TREATMENT GROUP FORMAT */
PROC FORMAT;
VALUE TRTFMT
1 = ’DOSE A’
2 = ’DOSE B’
3 = ’DOSE C’
4 = ’DOSE D’
5 = ’TOTAL’ ;
RUN;
*==================================================================
* SAS PROGRAM DEVELOPMENT: PREPARATION OF ANALYSIS DATA SET
*================================================================== ;
/* OBTAIN INFORMATION FOR SUMMARY TABLE FROM CLINICAL TRIAL DATA.
NOTE: SUMMARY VARIABLES NAMES ARE IN ALPHABETICAL ORDER TO
CORRESPOND TO THE DESIRED ROW ORDER IN OUTPUT TABLE */
PROC SORT DATA=SUGI.SUGI24 (KEEP=ID GRPCODE CORETEMP CPLEGIA
XCODE4 XCODE5 XCODE7)
OUT=TEMP1 (RENAME=(XCODE4=XAGRADE XCODE5=XRGRADE
XCODE7=XTALLOI));
BY ID;
RUN;
DATA &INDATA;
SET TEMP1;
BY ID;
OUTPUT;
GRPCODE =5 ; * ASSIGN GROUP CODE 5 (=total number of treatments + 1) TO
CALCULATE THE "TOTAL";
OUTPUT;
RUN;
PROC SORT DATA=&INDATA;
BY &GVAR ;
RUN ;
*==================================================================
* GENERATING SUMMARY STATISTICS :
* STEP 1 -- ASSIGN MACRO VARIABLES TO EACH LISTED CATEGORIES,
* VARIABLE NAMES ARE CREATED IN ALPHABETICAL ORDER FOR LISTING
* PURPOSE.
*================================================================== ;
%LET VAR1 = CORETEMP; * VARIABLE NAME;
%LET VARTYP1 = CON; * TYPE (CON=CONTINUE, CAT=CATEGORICAL);
%LET VARFMT1 = ; * FORMAT IF ANY - DO NOT INCLUDE "." ;
%LET VARLAB1 = %STR(LOWEST CORE TEMPERATURE ON CPB); * LABEL ;
%LET VAR2 = CPLEGIA;
%LET VARTYP2 = CON;
%LET VARFMT2 = ;
%LET VARLAB2 = %STR(AMOUNT OF CARDIOPLEGIA (in mL));
%LET VAR3 = XAGRADE;
%LET VARTYP3 = CAT;
%LET VARFMT3 = ;
%LET VARLAB3 = %STR(ANTEGRADE) ;
%LET VAR4 = XRGRADE;
%LET VARTYP4 = CAT;
%LET VARFMT4 = ;
%LET VARLAB4 = %STR(RETROGRADE) ;
%LET VAR5 = XTALLOI;
%LET VARTYP5 = CAT;
%LET VARFMT5 = ;
%LET VARLAB5 = %STR(CRYSTALLOID) ;
*==================================================================
* GENERATING SUMMARY STATISTICS :
* STEP 2 -- MACRO TO GENERATE SUMMARY STATISTICS.
*================================================================== ;
/* MACRO: STATS
DESCR: GENERATE SUMMARY DATA OF ALL DEFINED SUMMARY VARIABLES */
%LET TRTNUM = ; * INITIALIZE TRTNUM MACRO VARIABLE;
%MACRO STATS(VAR=, /* SUMMARY VARIABLE */
VARFMT=, /* FORMAT OF VARIABLE, IF ANY */
VARTYP=, /* VAR TYPE: CON or CAT (CONTINUE or CATEGORICAL)*/
VARLABEL= /* LABEL OF VARIABLE */ );
%IF &TRTNUM= %THEN %DO; * RUN ONLY ONCE FOR FIRST TIME;
/* 1. FIND THE TOTAL NUMBER OF PATIENTS IN EACH GROUP */
PROC FREQ DATA=&INDATA;
TABLE &GVAR/OUT=TOTAL NOPRINT;
RUN;
DATA TOTAL;
SET TOTAL END=LAST;
IF LAST THEN CALL SYMPUT(’TRTNUM’,LEFT(PUT(_N_,3.)));
RUN;
PROC TRANSPOSE DATA=TOTAL OUT=TTOTAL PREFIX=CNT;
ID &GVAR;
VAR COUNT;
RUN;
DATA ALL;
LENGTH VARNAME $8 VARLABEL $30 VARTYP $3 CATVAL $24;
SET TTOTAL(DROP=_NAME_ _LABEL_);
VARLABEL = ’NUMBER OF PATIENTS’;
RUN;
%END;
/* 2. GENERATE SUMMARY STATISTICS */
*** CATEGORICAL VARIABLE ***;
%IF &VARTYP = CAT %THEN %DO;
PROC FREQ DATA=&INDATA;
TABLE &GVAR/OUT=FREQ1(DROP=PERCENT) NOPRINT;
TABLE &GVAR*&VAR/OUT=FREQ2(DROP=PERCENT) NOPRINT;
RUN;
DATA FREQS;
MERGE FREQ1(RENAME=(COUNT=TOTAL)) FREQ2;
BY &GVAR;
PERCENT = ( COUNT / TOTAL ) * 100 ;
RUN;
PROC SORT DATA=FREQS; BY &VAR &GVAR ; RUN;
PROC TRANSPOSE DATA=FREQS OUT=COUNTS PREFIX=CNT;
BY &VAR ; ID &GVAR;
VAR COUNT;
RUN;
PROC TRANSPOSE DATA=FREQS OUT=PERCENTS PREFIX=PCT;
BY &VAR ; ID &GVAR;
VAR PERCENT;
RUN;
DATA &VAR ;
LENGTH VARNAME $8 VARLABEL $30 VARTYP $3 CATVAL $24;
MERGE COUNTS(KEEP=&VAR CNT1-CNT&TRTNUM)
PERCENTS(KEEP=&VAR PCT1-PCT&TRTNUM);
BY &VAR ;
VARNAME = "&VAR"; VARLABEL = "&VARLABEL"; VARTYP = "&VARTYP";
%IF &VARFMT = %THEN %DO;
CATVAL = &VAR ;
%END;
%ELSE %DO;
CATVAL = PUT(&VAR,&VARFMT..);
%END;
DROP &VAR;
RUN;
DATA ALL; SET ALL &VAR ; RUN;
%END;
*** CONTINUOUS VARIABLE ***;
%IF &VARTYP = CON %THEN %DO;
PROC SORT DATA=&INDATA OUT=CONTINUE; BY &GVAR; RUN;
PROC UNIVARIATE DATA=CONTINUE NOPRINT;
BY &GVAR;
VAR &VAR ;
OUTPUT OUT=STATS MEAN=MEAN MIN=MIN MAX=MAX STD=STD N=COUNT
NMISS=MISS MEDIAN=MEDIAN;
RUN;
DATA &VAR (KEEP=VARNAME VARLABEL VARTYP CATVAL
MEAN1-MEAN&TRTNUM MIN1-MIN&TRTNUM MAX1-MAX&TRTNUM
STD1-STD&TRTNUM CNT1-CNT&TRTNUM MISCNT1-MISCNT&TRTNUM
MEDIAN1-MEDIAN&TRTNUM );
LENGTH VARNAME $8 VARLABEL $30 VARTYP $3 CATVAL $24;
ARRAY _MEAN{&TRTNUM} MEAN1-MEAN&TRTNUM;
ARRAY _MEDIAN{&TRTNUM} MEDIAN1-MEDIAN&TRTNUM;
ARRAY _MIN{&TRTNUM} MIN1-MIN&TRTNUM;
ARRAY _MAX{&TRTNUM} MAX1-MAX&TRTNUM;
ARRAY _STD{&TRTNUM} STD1-STD&TRTNUM;
ARRAY _NUM{&TRTNUM} CNT1-CNT&TRTNUM;
ARRAY _MISS{&TRTNUM} MISCNT1-MISCNT&TRTNUM;
VARNAME = "&VAR"; VARLABEL = "&VARLABEL";
VARTYP = "&VARTYP"; CATVAL = ’ ’;
DO I=1 TO &TRTNUM;
SET STATS END=LAST;
_MEAN(I) = MEAN; _MEDIAN(I) = MEDIAN;
_MIN(I) = MIN; _MAX(I) = MAX;
_STD(I) = STD; _NUM(I) = COUNT;
_MISS(I) = MISS;
IF LAST THEN RETURN;
END;
RUN;
DATA ALL; SET ALL &VAR ; RUN;
%END;
%MEND;
/* RUN STATS MACRO WITH USER DEFINED MACRO VARIABLES */
%MACRO READY;
%DO I = 1 %TO &VARNUM;
%STATS(VAR=&&VAR&I,VARFMT=&&VARFMT&I,
VARTYP=&&VARTYP&I,VARLABEL=&&VARLAB&I);
%END;
%MEND;
%READY;
PROC SORT DATA=ALL; BY VARNAME ; RUN;
*===============================================================
* PRODUCING THE SUMMARY TABLE
*=============================================================== ;
/* SETUP SUMMARY TABLE FORMAT */
%LET FOOTHGT=22; * UMBER OF LINES IN FOOTER ;
%LET SPACING=1; * SPACE BETWEEN FIELDS ;
%LET FNUM=%EVAL(2 + &TRTNUM); * # OF FIELDS ;
%LET FW1=1; * WIDTH OF DEMOGRAPHIC VARIABLE;
%LET FW2=30; * WIDTH OF CATEGORY FIELD ;
/* ASSIGN COLUMN WIDTH FOR EACH TREATMENT GROUP */
%MACRO FINDGRP;
%DO I = 3 %TO %EVAL(&TRTNUM + 2);
%GLOBAL FW&I;
%LET FW&I = %EVAL(85/&TRTNUM);
%END;
%MEND;
%FINDGRP;
**** ASSIGN COLUMN FORMAT ****;
%MACRO SETCOLS;
%DO J=1 %TO &FNUM;
%GLOBAL C&J;
%END;
%LET C1=10;
%DO J=2 %TO &FNUM;
%LET JMINUS1=%EVAL(&J-1);
%LET C&J=%EVAL(&&C&JMINUS1 + &&FW&JMINUS1 + &SPACING);
%PUT FIELD &J BEGINS AT COL &&C&J; * DEBUG LINE *;
%END;
%MEND SETCOLS;
%SETCOLS;
%LET LASTCOL=%EVAL(&&C&FNUM + &&FW&FNUM - &C1);
%PUT LAST COLUMN OF TABLE: &LASTCOL; * DEBUG LINE ;
%LET CENTER=%EVAL( &C1 + &LASTCOL/2 );
%PUT CENTER=&CENTER;
OPTIONS MISSING=’ ’;
*==================================================================
* GENERATE THE TABLE
*================================================================== ;
%MACRO MACRUN;
DATA _NULL_;
LENGTH PPP1-PPP&TRTNUM $20 ;
SET ALL END=EOF;
BY VARNAME;
FILE OUTFILE PRINT NOTITLES LINESIZE=133 PAGESIZE=60 N=PS
LINESLEFT=LL;
RETAIN NEXTPAGE 1 CONTINUE 0 MINUS1 -1;
IF ( NEXTPAGE ) THEN LINK TITLES;
ARRAY _PCT{&TRTNUM} PCT1-PCT&TRTNUM;
ARRAY _CNT{&TRTNUM} CNT1-CNT&TRTNUM;
ARRAY _PPP{&TRTNUM} PPP1-PPP&TRTNUM;
/* PUT OBSERVATION: (MODIFY TO FIT SPECIFIC STUDY) */
IF FIRST.VARNAME THEN DO;
PUT / @&C1 VARLABEL @;
END;
IF VARTYP = ’CON’ THEN DO;
PUT / @&C2 ’MISSING’
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2);
@&&C&J MISCNT&I 3.
%END;
/ @&C2 ’MEAN (S.D.)’
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2);
@&&C&J MEAN&I 7.2 ’ (’ STD&I 6.1 ’)’
%END;
/ @&C2 ’MEDIAN’
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2);
@&&C&J MEDIAN&I 6.1
%END;
/ @&C2 ’RANGE’
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2);
@&&C&J MIN&I 6.1 ’ TO ’ MAX&I 6.1
%END; ;
END;
ELSE IF VARTYP = ’CAT’ THEN DO;
DO I = 1 TO &TRTNUM;
IF _CNT(I) NE . THEN DO;
IF _PCT(I) NE 100 THEN
_PPP(I) =TRIM(PUT(_CNT(I),3.)) ||’(‘ || TRIM(PUT(_PCT(I),4.1)) ||
'%)' ;
ELSE _PPP(I) = TRIM(PUT(_CNT(I),3.)) || ' (100%)';
END;
ELSE _PPP(I) = ' -';
END; PUT;
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2);
IF _CNT(&I) < 10 THEN PUT @&C2 CATVAL @&&C&J+2 PPP&I @;
ELSE PUT @&C2 CATVAL @&&C&J+1 PPP&I @;
%END;
IF LAST.VARNAME THEN PUT;
END;
ELSE IF VARTYP = ' ' THEN DO;
PUT
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2);
@&&C&J CNT&I 3.
%END; ;
END;
** PUT FOOTER, RESET NEXTPAGE **;
IF EOF OR (LL < &FOOTHGT+1) THEN DO;
LINK FOOTER; CONTINUE = 1;
END;
ELSE CONTINUE = 0;
RETURN;
*** PUT TITLES *****************************************;
TITLES:
NEXTPAGE=0;
%DO I = 1 %TO &TRTNUM ;
G&I = PUT(&I, TRTFMT.);
%END;
** FIND TITLE COLUMN **;
TITL1COL=&CENTER - LENGTH(TITL1)/2;
TITL2COL=&CENTER - LENGTH(TITL2)/2;
** PUT TITLE & LABEL **;
PUT /// @&C1 "SUGI_24"
@TITL1COL "CARDIOPULMONARY BYPASS – CARDIOPLEGIA SUMMARY"
// @TITL2COL "-- SAMPLE OUTPUT FOR SUGI24 --"
/ @&C1 &LASTCOL*'_'
// @&C1 'VARIABLE'
%DO I = 1 %TO &TRTNUM ;
%LET J = %EVAL(&I+2) ;
@&&C&J G&I /*** 'GROUP ' ***/
%END;
/ @&C1 &LASTCOL*'_';
RETURN;
** PUT FOOTNOTES **;
FOOTER:
DO WHILE (LL > &FOOTHGT);
PUT;
END;
NEXTPAGE=1; RETURN;
RUN;
%MEND;
%MACRUN;
*==================================================================
* PROGRAM DEVELOPMENT ENDS HERE
*================================================================== ;
